name: Build Windows EXE

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:   # 允許手動觸發

jobs:
  build-win:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install dependencies
      shell: cmd
      run: |
        python -m pip install --upgrade pip wheel
        pip install ^
          pyinstaller ^
          pyinstaller-hooks-contrib ^
          PySide6 ^
          shiboken6 ^
          python-socketio ^
          websocket-client ^
          requests ^
          Pillow

    - name: Prepare icon (ensure valid .ico)
      shell: pwsh
      run: |
        if (Test-Path icon.png) {
          python -c "from PIL import Image; Image.open('icon.png').save('icon.ico', format='ICO', sizes=[(256,256),(128,128),(64,64),(48,48),(32,32),(16,16)])"
        }

    - name: Create Qt runtime hook
      shell: pwsh
      run: |
        @'
        import os, sys
        base = getattr(sys, "_MEIPASS", os.path.abspath(os.path.dirname(__file__)))
        candidates = [
            os.path.join(base, "PySide6", "Qt", "plugins", "platforms"),
            os.path.join(base, "_internal", "PySide6", "Qt", "plugins", "platforms"),
            os.path.join(base, "_internal", "PySide6", "plugins", "platforms"),
        ]
        for p in candidates:
            if os.path.exists(p):
                os.environ["QT_QPA_PLATFORM_PLUGIN_PATH"] = p
                break
        '@ | Out-File -FilePath qt_runtime_hook.py -Encoding utf8

    - name: Build with PyInstaller
      shell: cmd
      run: |
        python -m PyInstaller --name "AudioSocketClient" --windowed --noconfirm ^
          --clean ^
          --collect-all PySide6 ^
          --collect-all shiboken6 ^
          --hidden-import PySide6.QtCore ^
          --hidden-import PySide6.QtGui ^
          --hidden-import PySide6.QtWidgets ^
          --runtime-hook qt_runtime_hook.py ^
          --add-data "app.crt;." ^
          --icon icon.ico ^
          main.py

    - name: Copy ANGLE/OpenGL DLLs into dist
      shell: pwsh
      run: |
        $pysideDir = python - << 'PY'
import pathlib, PySide6
print(pathlib.Path(PySide6.__file__).parent)
PY
        $pysideDir = $pysideDir.Trim()
        $dest = "dist/AudioSocketClient"
        $dlls = @('D3DCompiler_47.dll','libEGL.dll','libGLESv2.dll','opengl32sw.dll')
        foreach ($d in $dlls) {
          $src = Join-Path $pysideDir $d
          if (Test-Path $src) {
            Copy-Item $src $dest -Force
            Write-Host "Copied $d"
          } else {
            Write-Warning "Missing $d in $pysideDir"
          }
        }

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: AudioSocketClient-win
        path: dist/AudioSocketClient/**